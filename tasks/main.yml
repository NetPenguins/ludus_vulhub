---
- name: Install git if required
  ansible.builtin.package:
    name: git
    state: present

- name: Install curl if required
  ansible.builtin.package:
    name: curl
    state: present

- name: Identify latest yq binary
  ansible.builtin.package:
    name: git
    state: present

- name: Get latest yq version
  ansible.builtin.shell: |
    curl -sLI https://github.com/mikefarah/yq/releases/latest | grep -ioP 'location.*/tag/\Kv\d+\.\d+\.\d+' | tail -1
  register: yq_version
  changed_when: false

- name: Download yq binary
  ansible.builtin.get_url:
    url: "https://github.com/mikefarah/yq/releases/download/{{ yq_version.stdout }}/yq_linux_amd64"
    dest: "/usr/bin/yq"
    mode: "0755"

# we add a force because we end up modifying some files if we go the persistent route
- name: Get the source code
  ansible.builtin.git:
    repo: "{{ vulhub_git_url }}"
    dest: "{{ vulhub_install_path }}"
    version: "{{ vulhub_branch }}"
    single_branch: true
    force: true

- name: Stop any existing vulhub docker containers
  ansible.builtin.shell: |
    docker ps --filter "label=com.docker.compose.project.working_dir" --format {% raw %}"{{.ID}} {{.Labels}}"{% endraw %} | \
     grep 'com.docker.compose.project.config_files={{ vulhub_install_path }}' | cut -d ' ' -f 1 | xargs -r docker stop

# community.docker.docker_compose has too many dependencies
- name: Start the vulhub environments (shell) - persistent
  ansible.builtin.shell:
    cmd: |
      yq eval '(.services[] |= (del(.ports)))' -i {{ vulhub_install_path }}/{{ vulhub_env }}/docker-compose.yml
      yq eval '(.services[] |= . + {"restart": "always", "network_mode": "host"})' -i {{ vulhub_install_path }}/{{ vulhub_env }}/docker-compose.yml
      docker compose build
      docker compose up -d
    chdir: "{{ vulhub_install_path }}/{{ vulhub_env }}"
  loop: "{{ vulhub_envs }}"
  loop_control:
    loop_var: vulhub_env
  when: vulhub_persistent
  register: vulhub_output
  changed_when: "'Building' in vulhub_output.stdout or 'Creating' in vulhub_output.stdout"

- name: Start the vulhub environments (shell) - non-persistent
  ansible.builtin.shell:
    cmd: |
      docker compose build
      docker compose up -d
    chdir: "{{ vulhub_install_path }}/{{ vulhub_env }}"
  loop: "{{ vulhub_envs }}"
  loop_control:
    loop_var: vulhub_env
  when: not vulhub_persistent
  register: compose_output
  changed_when: "'Building' in compose_output.stdout or 'Creating' in compose_output.stdout"
